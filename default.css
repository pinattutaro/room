:root {
    --thick: 20px;
    --width: 300px;
    --height: 300px;
    --color: white;
    --side-color: gray;
    --vertical: 0px;

    --hole-width: 0px;
    --hole-height: 0px;
    --hole-top: 0px;
    --hole-left: 0px;
}

body {
    margin: 0;
    width: 100vw;
    height: 100vh;
    background: radial-gradient(50vh 50vh at center, white, black);
    display: grid;
    /* justify-items: center;
    align-items: end; */
    place-items: center;
    overflow: hidden;

    perspective: 1000px;

    & * {
        position: relative;
        mix-blend-mode: normal;
        will-change: transform;
        appearance: none;
        -webkit-appearance: none;
    }

    &::after {
        position: absolute;
        z-index: 999;
        /* content: ""; */
        width: 100%;
        height: 100%;
        background-color: black;
        opacity: 0.1;
        pointer-events: none;
    }
}

.room {
    transform-style: preserve-3d;
    transform-origin: 50% 50%;
    transform: rotateX(60deg) rotateZ(45deg);
    width: var(--base-width); 
    height: var(--base-height);

    & > .object:first-child {
        top: calc(var(--height)/-2);
        left: calc((var(--width)/-2));
    }
}

.board, .base {
    --margin: calc(var(--width) - var(--thick));
    width: var(--thick);
    height: var(--height);
    margin-right: var(--margin);
    background-color: var(--side-color);
    transform-style: preserve-3d;
    overflow: visible;
    transform-origin: 100% 0;
    transform: translateX(var(--margin)) rotateY(90deg);
    position: absolute;
    left: 0;
    top: 0;

    &.base {
        transform: translateZ(calc(-1*var(--thick))) translateX(var(--margin)) rotateY(90deg);
    }

    &::before, &::after {
        content: "";
        position: absolute;
        width: var(--width);
        transform-origin: 100% 0;
        box-sizing: border-box;
        /* border: solid 1px #ccc; */
    }

    &::before {
        height: var(--height);
        background-color: var(--color);
        transform: translateX(calc(var(--height)*-1)) rotateY(-90deg);
        clip-path: polygon(0 100%, 100% 100%, 100% 0, 0 0, var(--hole-left) var(--hole-top), calc(var(--hole-left) + var(--hole-width)) var(--hole-top), calc(var(--hole-left) + var(--hole-width)) calc(var(--hole-top) + var(--hole-height)), var(--hole-left) calc(var(--hole-top) + var(--hole-height)), var(--hole-left) var(--hole-top), 0 0);
        border: solid 1px #ccc;
    }

    &::after {
        height: var(--thick);
        background-color: var(--side-color);
        transform: translateX(calc(var(--height)*-1)) translateY(var(--height)) rotateY(-90deg) rotateX(-90deg);
    }
}

.hollow {
    width: var(--width);
    height: var(--thick);
    background-color: var(--side-color);
    transform-style: preserve-3d;
    transform-origin: 0 0;
    transform: translateZ(var(--vertical)) rotateX(-90deg);

    &::before, &::after {
        position: absolute;
        height: var(--height);
        content: "";
        transform-origin: 100% 0;
        box-sizing: border-box;
        border: solid 1px #ccc;
    }

    &::before {
        background-color: var(--color);
        transform: translateY(var(--thick)) rotateX(90deg);
        width: var(--width);
    }

    &::after {
        background-color: var(--side-color);
        transform: translateY(var(--thick)) translateX(calc(-1*var(--thick))) rotateX(90deg) rotateY(90deg);
        width: var(--thick);
    }
}

.object {
    position: absolute;
    transform-style: preserve-3d;
    transform-origin: 0 0;
    width: 10px;
    height: 10px;
    transform: rotateZ(0deg) translateZ(var(--vertical));
    --vertical: 0px;

    &.right {
        transform: rotateX(90deg) rotateY(90deg) translateZ(var(--vertical));
    }

    &.left {
        transform: rotateY(-90deg) rotateX(-90deg) translateZ(var(--vertical));
    }
}

.debug {
    width: 5px;
    height: 5px;
    background-color: black;
    position: relative;
}